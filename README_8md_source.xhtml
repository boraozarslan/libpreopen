<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.14"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>libpreopen: README.md Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
  $(document).ready(initResizable);
/* @license-end */</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">libpreopen
   &#160;<span id="projectnumber">v0.0.1</span>
   </div>
   <div id="projectbrief">Library for pre-opening file descriptors</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.14 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('README_8md.xhtml','');});
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">README.md</div>  </div>
</div><!--header-->
<div class="contents">
<a href="README_8md.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;# libpreopen</div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;</div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;`libpreopen` supports compartmentalized applications by storing pre-opened</div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;directory descriptors and using them in capability-safe `libc` wrappers.</div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;</div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;Many `libc` functions require *ambient authority*:</div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;the ability to access global namespaces.</div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;For example, you can&#39;t `open(2)` a file without access to the global filesystem</div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;namespace.</div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;Operating systems have been introducing compartmentalization primitives such as</div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;[Capsicum](https://www.freebsd.org/cgi/man.cgi?query=capsicum) and</div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;[seccomp-bpf](https://www.kernel.org/doc/Documentation/prctl/seccomp_filter.txt)</div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;that restrict access to global namespaces, allowing *sandboxing* of processes</div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;to mitigate security risks.</div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;A sandboxed application can no longer use ambient authority, so it cannot call</div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;common C functions such as `access(2)`, `open(2)`, `stat(2)`, etc.</div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;Adapting applications to play nicely within a sandbox can require a significant</div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;amount of manual adaptation from `open(2)` to `openat(2)` or even, in the worst</div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;case, to complex IPC primitives.</div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;</div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;</div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;## Build</div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;</div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;`libpreopen` can be built with the usual CMake workflow:</div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;</div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;```terminal</div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;$ mkdir -p build/Debug</div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;$ cd build/Debug</div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;$ cmake -D CMAKE_BUILD_TYPE=Debug -G Ninja ../..</div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;$ ninja</div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;```</div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;</div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;(or omit `-G Ninja` and use `make` instead of</div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;[Ninja](https://ninja-build.org)... but why would you want to do that?)</div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;</div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;It can also be built by running the `ci/build.sh` script with an argument of</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;either `Debug` or `Release`.</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;</div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;## Testing</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;You can run the `libpreopen` tests with the `check` target, i.e., run</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;`make check` or `ninja check` in the build directory.</div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;This will require [lit](https://pypi.python.org/pypi/lit) to be installed in</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;your `PATH`, as well as LLVM `FileCheck`.</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;YMMV, but I find it best to use `lit` from PyPi (link above) early in my `PATH`</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;because it gets the lit `site-packages` directory more correct than some</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;distribution packages.</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;Depending on your environment, `FileCheck` may have to come from a full-blown</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;LLVM package (e.g., something like `devel/llvm60` on FreeBSD); I usually put</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;this at the end of my `PATH` to avoid picking up the wrong `lit`.</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;You can also run individual tests with `lit path/to/test`, but that will require</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;you to tell `lit` where the `libpreopen` source and build directories are</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;(either via `--param` options or environment variables: you will receive helpful</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;error messages if you don&#39;t).</div></div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="README_8md.xhtml">README.md</a></li>
    <li class="footer">Generated by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.14 </li>
  </ul>
</div>
</body>
</html>
