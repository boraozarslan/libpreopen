<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.14"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>libpreopen: include/libpreopen.h File Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
  $(document).ready(initResizable);
/* @license-end */</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">libpreopen
   &#160;<span id="projectnumber">v0.0.1</span>
   </div>
   <div id="projectbrief">Library for pre-opening file descriptors</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.14 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('libpreopen_8h.xhtml','');});
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#nested-classes">Data Structures</a> &#124;
<a href="#typedef-members">Typedefs</a> &#124;
<a href="#func-members">Functions</a> &#124;
<a href="#var-members">Variables</a>  </div>
  <div class="headertitle">
<div class="title">libpreopen.h File Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p>Public header for libpreopen.  
<a href="#details">More...</a></p>
<div class="textblock"><div class="dynheader">
This graph shows which files directly or indirectly include this file:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="libpreopen_8h__dep__incl.svg" width="154" height="112"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
</div>
<p><a href="libpreopen_8h_source.xhtml">Go to the source code of this file.</a></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"></a>
Data Structures</h2></td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structpo__relpath.xhtml">po_relpath</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">A filesystem path, relative to a directory descriptor.  <a href="structpo__relpath.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="typedef-members"></a>
Typedefs</h2></td></tr>
<tr class="memitem:ae275abcb02b858e80d18bdbd402d0561"><td class="memItemLeft" align="right" valign="top">typedef bool()&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="libpreopen_8h.xhtml#ae275abcb02b858e80d18bdbd402d0561">po_map_iter_cb</a>(const char *dirname, int dirfd, cap_rights_t)</td></tr>
<tr class="memdesc:ae275abcb02b858e80d18bdbd402d0561"><td class="mdescLeft">&#160;</td><td class="mdescRight">A callback that can be used to inpect the contents of a <a class="el" href="structpo__map.xhtml">po_map</a>.  <a href="#ae275abcb02b858e80d18bdbd402d0561">More...</a><br /></td></tr>
<tr class="separator:ae275abcb02b858e80d18bdbd402d0561"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:a26cc887be5b3bc545b05b6585d633073"><td class="memItemLeft" align="right" valign="top">struct <a class="el" href="structpo__map.xhtml">po_map</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="libpreopen_8h.xhtml#a26cc887be5b3bc545b05b6585d633073">po_map_create</a> (int capacity)</td></tr>
<tr class="memdesc:a26cc887be5b3bc545b05b6585d633073"><td class="mdescLeft">&#160;</td><td class="mdescRight">Create a <a class="el" href="structpo__map.xhtml">po_map</a> of at least the specified capacity.  <a href="#a26cc887be5b3bc545b05b6585d633073">More...</a><br /></td></tr>
<tr class="separator:a26cc887be5b3bc545b05b6585d633073"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5bde5ee82b0d1cedbdb3bf716044978b"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="libpreopen_8h.xhtml#a5bde5ee82b0d1cedbdb3bf716044978b">po_map_release</a> (struct <a class="el" href="structpo__map.xhtml">po_map</a> *)</td></tr>
<tr class="memdesc:a5bde5ee82b0d1cedbdb3bf716044978b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Release a reference to a <a class="el" href="structpo__map.xhtml">po_map</a>.  <a href="#a5bde5ee82b0d1cedbdb3bf716044978b">More...</a><br /></td></tr>
<tr class="separator:a5bde5ee82b0d1cedbdb3bf716044978b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a13763075e083556dabfda3a317bbbbac"><td class="memItemLeft" align="right" valign="top">size_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="libpreopen_8h.xhtml#a13763075e083556dabfda3a317bbbbac">po_map_foreach</a> (const struct <a class="el" href="structpo__map.xhtml">po_map</a> *, <a class="el" href="libpreopen_8h.xhtml#ae275abcb02b858e80d18bdbd402d0561">po_map_iter_cb</a>)</td></tr>
<tr class="memdesc:a13763075e083556dabfda3a317bbbbac"><td class="mdescLeft">&#160;</td><td class="mdescRight">Iterate over a <a class="el" href="structpo__map.xhtml">po_map</a>, invoking a callback for each element in the map.  <a href="#a13763075e083556dabfda3a317bbbbac">More...</a><br /></td></tr>
<tr class="separator:a13763075e083556dabfda3a317bbbbac"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af59b34f79c9863d02a96ced18c2544b1"><td class="memItemLeft" align="right" valign="top">struct <a class="el" href="structpo__map.xhtml">po_map</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="libpreopen_8h.xhtml#af59b34f79c9863d02a96ced18c2544b1">po_map_get</a> (void)</td></tr>
<tr class="memdesc:af59b34f79c9863d02a96ced18c2544b1"><td class="mdescLeft">&#160;</td><td class="mdescRight">Retrieve (and possibly create) the default map.  <a href="#af59b34f79c9863d02a96ced18c2544b1">More...</a><br /></td></tr>
<tr class="separator:af59b34f79c9863d02a96ced18c2544b1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2c8cfba0d480b740f4f4c0f638050c5a"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="libpreopen_8h.xhtml#a2c8cfba0d480b740f4f4c0f638050c5a">po_map_set</a> (struct <a class="el" href="structpo__map.xhtml">po_map</a> *)</td></tr>
<tr class="memdesc:a2c8cfba0d480b740f4f4c0f638050c5a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set the default map, taking ownership of its memory allocation(s).  <a href="#a2c8cfba0d480b740f4f4c0f638050c5a">More...</a><br /></td></tr>
<tr class="separator:a2c8cfba0d480b740f4f4c0f638050c5a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aab64d62d21b4ae69326ab732ea859aca"><td class="memItemLeft" align="right" valign="top">struct <a class="el" href="structpo__map.xhtml">po_map</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="libpreopen_8h.xhtml#aab64d62d21b4ae69326ab732ea859aca">po_add</a> (struct <a class="el" href="structpo__map.xhtml">po_map</a> *map, const char *path, int fd)</td></tr>
<tr class="memdesc:aab64d62d21b4ae69326ab732ea859aca"><td class="mdescLeft">&#160;</td><td class="mdescRight">Add an already-opened directory to a <a class="el" href="structpo__map.xhtml">po_map</a>.  <a href="#aab64d62d21b4ae69326ab732ea859aca">More...</a><br /></td></tr>
<tr class="separator:aab64d62d21b4ae69326ab732ea859aca"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1edc9d3bb87b703c9b1db9d199d0947b"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="libpreopen_8h.xhtml#a1edc9d3bb87b703c9b1db9d199d0947b">po_preopen</a> (struct <a class="el" href="structpo__map.xhtml">po_map</a> *map, const char *path, int flags,...)</td></tr>
<tr class="memdesc:a1edc9d3bb87b703c9b1db9d199d0947b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Pre-open a path and store it in a <a class="el" href="structpo__map.xhtml">po_map</a> for later use.  <a href="#a1edc9d3bb87b703c9b1db9d199d0947b">More...</a><br /></td></tr>
<tr class="separator:a1edc9d3bb87b703c9b1db9d199d0947b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa829bced964720cf17c5350c643736da"><td class="memItemLeft" align="right" valign="top">struct <a class="el" href="structpo__relpath.xhtml">po_relpath</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="libpreopen_8h.xhtml#aa829bced964720cf17c5350c643736da">po_find</a> (struct <a class="el" href="structpo__map.xhtml">po_map</a> *map, const char *path, cap_rights_t *rights)</td></tr>
<tr class="memdesc:aa829bced964720cf17c5350c643736da"><td class="mdescLeft">&#160;</td><td class="mdescRight">Find a directory whose path is a prefix of <b>path</b> and (on platforms that support Capsicum) that has the rights required by <b>rights</b>.  <a href="#aa829bced964720cf17c5350c643736da">More...</a><br /></td></tr>
<tr class="separator:aa829bced964720cf17c5350c643736da"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adfbce32fb67bd878181e6ef1f0b4cf4b"><td class="memItemLeft" align="right" valign="top">const char *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="libpreopen_8h.xhtml#adfbce32fb67bd878181e6ef1f0b4cf4b">po_last_error</a> (void)</td></tr>
<tr class="memdesc:adfbce32fb67bd878181e6ef1f0b4cf4b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Retrieve a message from with the last libpreopen error.  <a href="#adfbce32fb67bd878181e6ef1f0b4cf4b">More...</a><br /></td></tr>
<tr class="separator:adfbce32fb67bd878181e6ef1f0b4cf4b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afcacfc38f21f677e4794748637a3e1d5"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="libpreopen_8h.xhtml#afcacfc38f21f677e4794748637a3e1d5">po_pack</a> (struct <a class="el" href="structpo__map.xhtml">po_map</a> *map)</td></tr>
<tr class="memdesc:afcacfc38f21f677e4794748637a3e1d5"><td class="mdescLeft">&#160;</td><td class="mdescRight">Pack a <code>struct <a class="el" href="structpo__map.xhtml" title="A mapping from paths to pre-opened directories. ">po_map</a></code> into a shared memory segment.  <a href="#afcacfc38f21f677e4794748637a3e1d5">More...</a><br /></td></tr>
<tr class="separator:afcacfc38f21f677e4794748637a3e1d5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af11d69efff09c02fc3f3b7bfdeccaa1b"><td class="memItemLeft" align="right" valign="top">struct <a class="el" href="structpo__map.xhtml">po_map</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="libpreopen_8h.xhtml#af11d69efff09c02fc3f3b7bfdeccaa1b">po_unpack</a> (int fd)</td></tr>
<tr class="memdesc:af11d69efff09c02fc3f3b7bfdeccaa1b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Unpack a <code>struct <a class="el" href="structpo__map.xhtml" title="A mapping from paths to pre-opened directories. ">po_map</a></code> from a file.  <a href="#af11d69efff09c02fc3f3b7bfdeccaa1b">More...</a><br /></td></tr>
<tr class="separator:af11d69efff09c02fc3f3b7bfdeccaa1b"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="var-members"></a>
Variables</h2></td></tr>
<tr class="memitem:a530ee710dd6c7d6d98bb57204e2fdc33"><td class="memItemLeft" align="right" valign="top"><a class="el" href="libpreopen_8h.xhtml#ae275abcb02b858e80d18bdbd402d0561">po_map_iter_cb</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="libpreopen_8h.xhtml#a530ee710dd6c7d6d98bb57204e2fdc33">po_print_entry</a></td></tr>
<tr class="memdesc:a530ee710dd6c7d6d98bb57204e2fdc33"><td class="mdescLeft">&#160;</td><td class="mdescRight">A simple <a class="el" href="libpreopen_8h.xhtml#ae275abcb02b858e80d18bdbd402d0561">po_map_iter_cb</a> that will print a <a class="el" href="structpo__map.xhtml">po_map</a>'s entries, one per line.  <a href="#a530ee710dd6c7d6d98bb57204e2fdc33">More...</a><br /></td></tr>
<tr class="separator:a530ee710dd6c7d6d98bb57204e2fdc33"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>Public header for libpreopen. </p>
<p>Copyright (c) 2016 Stanley Uche Godfrey Copyright (c) 2016, 2018 Jonathan Anderson All rights reserved.</p>
<p>This software was developed at Memorial University under the NSERC Discovery program (RGPIN-2015-06048). Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:</p>
<ol type="1">
<li>Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.</li>
<li>Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.</li>
</ol>
<p>THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS `&lsquo;AS IS&rsquo;' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. </p>

<p class="definition">Definition in file <a class="el" href="libpreopen_8h_source.xhtml">libpreopen.h</a>.</p>
</div><h2 class="groupheader">Typedef Documentation</h2>
<a id="ae275abcb02b858e80d18bdbd402d0561"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae275abcb02b858e80d18bdbd402d0561">&#9670;&nbsp;</a></span>po_map_iter_cb</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef bool() po_map_iter_cb(const char *dirname, int dirfd, cap_rights_t)</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>A callback that can be used to inpect the contents of a <a class="el" href="structpo__map.xhtml">po_map</a>. </p>
<p>This callback can be invoked by iteration code to expose elements of a <a class="el" href="structpo__map.xhtml">po_map</a> (in no particular order).</p>
<dl class="section return"><dt>Returns</dt><dd>whether or not to continue iterating over the <a class="el" href="structpo__map.xhtml">po_map</a> </dd></dl>

<p class="definition">Definition at line <a class="el" href="libpreopen_8h_source.xhtml#l00063">63</a> of file <a class="el" href="libpreopen_8h_source.xhtml">libpreopen.h</a>.</p>

</div>
</div>
<h2 class="groupheader">Function Documentation</h2>
<a id="aab64d62d21b4ae69326ab732ea859aca"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aab64d62d21b4ae69326ab732ea859aca">&#9670;&nbsp;</a></span>po_add()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">struct <a class="el" href="structpo__map.xhtml">po_map</a>* po_add </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structpo__map.xhtml">po_map</a> *&#160;</td>
          <td class="paramname"><em>map</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>path</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>fd</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Add an already-opened directory to a <a class="el" href="structpo__map.xhtml">po_map</a>. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">map</td><td>the map to add the path-&gt;fd mapping to </td></tr>
    <tr><td class="paramname">path</td><td>the path that will map to this directory (which may or may not be the path used to open it) </td></tr>
    <tr><td class="paramname">fd</td><td>the directory descriptor (must be a directory!) </td></tr>
  </table>
  </dd>
</dl>

<p class="definition">Definition at line <a class="el" href="libpreopen_8c_source.xhtml#l00050">50</a> of file <a class="el" href="libpreopen_8c_source.xhtml">libpreopen.c</a>.</p>

<p class="reference">References <a class="el" href="po__err_8c.xhtml#a67a367198c38d11149314c86191cdcb8">po_map_assertvalid()</a>, and <a class="el" href="po__map_8c.xhtml#a2a1db96295f5776354b805c388b825d3">po_map_enlarge()</a>.</p>

<p class="reference">Referenced by <a class="el" href="libpreopen_8c.xhtml#a1edc9d3bb87b703c9b1db9d199d0947b">po_preopen()</a>.</p>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="libpreopen_8h_aab64d62d21b4ae69326ab732ea859aca_cgraph.svg" width="266" height="88"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<div class="dynheader">
Here is the caller graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="libpreopen_8h_aab64d62d21b4ae69326ab732ea859aca_icgraph.svg" width="222" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="aa829bced964720cf17c5350c643736da"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa829bced964720cf17c5350c643736da">&#9670;&nbsp;</a></span>po_find()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">struct <a class="el" href="structpo__relpath.xhtml">po_relpath</a> po_find </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structpo__map.xhtml">po_map</a> *&#160;</td>
          <td class="paramname"><em>map</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>path</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">cap_rights_t *&#160;</td>
          <td class="paramname"><em>rights</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Find a directory whose path is a prefix of <b>path</b> and (on platforms that support Capsicum) that has the rights required by <b>rights</b>. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">map</td><td>the map to look for a directory in </td></tr>
    <tr><td class="paramname">path</td><td>the path we want to find a pre-opened prefix for </td></tr>
    <tr><td class="paramname">rights</td><td>if non-NULL on a platform with Capsicum support, the rights any directory descriptor must have to qualify as a match </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>a <a class="el" href="structpo__relpath.xhtml">po_relpath</a> containing the descriptor of the best-match directory in the map (or -1 if none was found) and the remaining path, relative to the file (or undefined if no match found) </dd></dl>

<p class="definition">Definition at line <a class="el" href="libpreopen_8c_source.xhtml#l00085">85</a> of file <a class="el" href="libpreopen_8c_source.xhtml">libpreopen.c</a>.</p>

<p class="reference">References <a class="el" href="structpo__relpath.xhtml#adbfd907732d872907ff53dee0c17dade">po_relpath::dirfd</a>, <a class="el" href="libpreopen_8c.xhtml#af97372bfa72deabe14b2fc325ec0e1a9">po_isprefix()</a>, <a class="el" href="po__err_8c.xhtml#a67a367198c38d11149314c86191cdcb8">po_map_assertvalid()</a>, and <a class="el" href="structpo__relpath.xhtml#a5315273ae3c6bee251348895e97f951f">po_relpath::relative_path</a>.</p>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="libpreopen_8h_aa829bced964720cf17c5350c643736da_cgraph.svg" width="264" height="88"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="adfbce32fb67bd878181e6ef1f0b4cf4b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#adfbce32fb67bd878181e6ef1f0b4cf4b">&#9670;&nbsp;</a></span>po_last_error()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const char* po_last_error </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Retrieve a message from with the last libpreopen error. </p>
<dl class="section return"><dt>Returns</dt><dd>NULL if there are no errors, null-terminated string otherwise </dd></dl>

<p class="definition">Definition at line <a class="el" href="po__err_8c_source.xhtml#l00088">88</a> of file <a class="el" href="po__err_8c_source.xhtml">po_err.c</a>.</p>

</div>
</div>
<a id="a26cc887be5b3bc545b05b6585d633073"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a26cc887be5b3bc545b05b6585d633073">&#9670;&nbsp;</a></span>po_map_create()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">struct <a class="el" href="structpo__map.xhtml">po_map</a>* po_map_create </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>capacity</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Create a <a class="el" href="structpo__map.xhtml">po_map</a> of at least the specified capacity. </p>
<p>The returned <a class="el" href="structpo__map.xhtml">po_map</a> will have a reference count of 1. </p>

<p class="definition">Definition at line <a class="el" href="po__map_8c_source.xhtml#l00044">44</a> of file <a class="el" href="po__map_8c_source.xhtml">po_map.c</a>.</p>

<p class="reference">References <a class="el" href="po__err_8c.xhtml#a67a367198c38d11149314c86191cdcb8">po_map_assertvalid()</a>.</p>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="libpreopen_8h_a26cc887be5b3bc545b05b6585d633073_cgraph.svg" width="311" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a13763075e083556dabfda3a317bbbbac"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a13763075e083556dabfda3a317bbbbac">&#9670;&nbsp;</a></span>po_map_foreach()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">size_t po_map_foreach </td>
          <td>(</td>
          <td class="paramtype">const struct <a class="el" href="structpo__map.xhtml">po_map</a> *&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="libpreopen_8h.xhtml#ae275abcb02b858e80d18bdbd402d0561">po_map_iter_cb</a>&#160;</td>
          <td class="paramname">&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Iterate over a <a class="el" href="structpo__map.xhtml">po_map</a>, invoking a callback for each element in the map. </p>
<p>This function will cause <b>callback</b> to be invoked repeatedly, in no particular order, until the entire map has been iterated over or until the callback returns <code>false</code>.</p>
<dl class="section return"><dt>Returns</dt><dd>number of elements iterated over </dd></dl>

<p class="definition">Definition at line <a class="el" href="po__map_8c_source.xhtml#l00084">84</a> of file <a class="el" href="po__map_8c_source.xhtml">po_map.c</a>.</p>

<p class="reference">References <a class="el" href="po__err_8c.xhtml#a67a367198c38d11149314c86191cdcb8">po_map_assertvalid()</a>.</p>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="libpreopen_8h_a13763075e083556dabfda3a317bbbbac_cgraph.svg" width="319" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="af59b34f79c9863d02a96ced18c2544b1"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af59b34f79c9863d02a96ced18c2544b1">&#9670;&nbsp;</a></span>po_map_get()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">struct <a class="el" href="structpo__map.xhtml">po_map</a>* po_map_get </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Retrieve (and possibly create) the default map. </p>
<p>This can fail if there is no existing map and memory allocation fails. </p>

<p class="definition">Definition at line <a class="el" href="po__libc__wrappers_8c_source.xhtml#l00133">133</a> of file <a class="el" href="po__libc__wrappers_8c_source.xhtml">po_libc_wrappers.c</a>.</p>

</div>
</div>
<a id="a5bde5ee82b0d1cedbdb3bf716044978b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5bde5ee82b0d1cedbdb3bf716044978b">&#9670;&nbsp;</a></span>po_map_release()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void po_map_release </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structpo__map.xhtml">po_map</a> *&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Release a reference to a <a class="el" href="structpo__map.xhtml">po_map</a>. </p>
<p>This may cause memory to be freed. </p>

<p class="definition">Definition at line <a class="el" href="po__map_8c_source.xhtml#l00103">103</a> of file <a class="el" href="po__map_8c_source.xhtml">po_map.c</a>.</p>

<p class="reference">References <a class="el" href="po__err_8c.xhtml#a67a367198c38d11149314c86191cdcb8">po_map_assertvalid()</a>.</p>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="libpreopen_8h_a5bde5ee82b0d1cedbdb3bf716044978b_cgraph.svg" width="316" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a2c8cfba0d480b740f4f4c0f638050c5a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2c8cfba0d480b740f4f4c0f638050c5a">&#9670;&nbsp;</a></span>po_map_set()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void po_map_set </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structpo__map.xhtml">po_map</a> *&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Set the default map, taking ownership of its memory allocation(s). </p>
<p>If there is an existing default map, it will be freed before it is replaced. It is permissible to pass in a NULL map in order to clear the current default map. </p>

<p class="definition">Definition at line <a class="el" href="po__libc__wrappers_8c_source.xhtml#l00149">149</a> of file <a class="el" href="po__libc__wrappers_8c_source.xhtml">po_libc_wrappers.c</a>.</p>

<p class="reference">References <a class="el" href="po__err_8c.xhtml#a67a367198c38d11149314c86191cdcb8">po_map_assertvalid()</a>.</p>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="libpreopen_8h_a2c8cfba0d480b740f4f4c0f638050c5a_cgraph.svg" width="292" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="afcacfc38f21f677e4794748637a3e1d5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#afcacfc38f21f677e4794748637a3e1d5">&#9670;&nbsp;</a></span>po_pack()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int po_pack </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structpo__map.xhtml">po_map</a> *&#160;</td>
          <td class="paramname"><em>map</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Pack a <code>struct <a class="el" href="structpo__map.xhtml" title="A mapping from paths to pre-opened directories. ">po_map</a></code> into a shared memory segment. </p>
<p>To inherit a <code><a class="el" href="structpo__map.xhtml" title="A mapping from paths to pre-opened directories. ">po_map</a></code> across the process execution boundary, it needs to be packed into an inheritable form such as a shared memory segment. This can then be unpacked in the child process for direct access.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">map</td><td>the map to pack into shared memory</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>a file descriptor of a shared memory segment (or -1 on error) </dd></dl>

<p class="definition">Definition at line <a class="el" href="po__pack_8c_source.xhtml#l00088">88</a> of file <a class="el" href="po__pack_8c_source.xhtml">po_pack.c</a>.</p>

<p class="reference">References <a class="el" href="structpo__packed__map.xhtml#a23afb59f3880ee100480505a953f91b1">po_packed_map::count</a>, <a class="el" href="structpo__packed__map.xhtml#acf9768c2ee0fa19cea48b9ec1cd5a61f">po_packed_map::entries</a>, <a class="el" href="structpo__packed__entry.xhtml#a417c380c727c767c06bb666d5bce9173">po_packed_entry::fd</a>, <a class="el" href="structpo__packed__entry.xhtml#a48e049409e5d5d67e99aa84773635173">po_packed_entry::len</a>, <a class="el" href="structpo__packed__entry.xhtml#abcb4b3288468300ab57563f2cc596c86">po_packed_entry::offset</a>, <a class="el" href="po__err_8c.xhtml#a2579611c2cf8960421fbef392fd159bf">po_errormessage()</a>, <a class="el" href="po__err_8c.xhtml#a67a367198c38d11149314c86191cdcb8">po_map_assertvalid()</a>, and <a class="el" href="structpo__packed__map.xhtml#abd85b6fb48da187f1f19db6dfa7272f3">po_packed_map::tablelen</a>.</p>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="libpreopen_8h_afcacfc38f21f677e4794748637a3e1d5_cgraph.svg" width="270" height="88"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a1edc9d3bb87b703c9b1db9d199d0947b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1edc9d3bb87b703c9b1db9d199d0947b">&#9670;&nbsp;</a></span>po_preopen()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int po_preopen </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structpo__map.xhtml">po_map</a> *&#160;</td>
          <td class="paramname"><em>map</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>path</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>flags</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>...</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Pre-open a path and store it in a <a class="el" href="structpo__map.xhtml">po_map</a> for later use. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">map</td><td>the map to add the path-&gt;fd mapping to </td></tr>
    <tr><td class="paramname">path</td><td>the path to pre-open (which may be a directory if <code>O_DIRECTORY</code> is passed via <b>flags</b>) </td></tr>
    <tr><td class="paramname">flags</td><td>flags to pass to <code>open(2)</code> / <code>openat(2)</code> </td></tr>
    <tr><td class="paramname">...</td><td>optional file mode, as accepted by <code>open(2)</code></td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>the file descriptor of the opened directory or -1 if <b>path</b> is not a directory or cannot be opened or if the <a class="el" href="structpo__map.xhtml">po_map</a> cannot store the directory (e.g., resizing fails) </dd></dl>

<p class="definition">Definition at line <a class="el" href="libpreopen_8c_source.xhtml#l00148">148</a> of file <a class="el" href="libpreopen_8c_source.xhtml">libpreopen.c</a>.</p>

<p class="reference">References <a class="el" href="libpreopen_8c.xhtml#aab64d62d21b4ae69326ab732ea859aca">po_add()</a>, and <a class="el" href="po__err_8c.xhtml#a67a367198c38d11149314c86191cdcb8">po_map_assertvalid()</a>.</p>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="libpreopen_8h_a1edc9d3bb87b703c9b1db9d199d0947b_cgraph.svg" width="408" height="88"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="af11d69efff09c02fc3f3b7bfdeccaa1b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af11d69efff09c02fc3f3b7bfdeccaa1b">&#9670;&nbsp;</a></span>po_unpack()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">struct <a class="el" href="structpo__map.xhtml">po_map</a>* po_unpack </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>fd</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Unpack a <code>struct <a class="el" href="structpo__map.xhtml" title="A mapping from paths to pre-opened directories. ">po_map</a></code> from a file. </p>
<p>Using the representation generated by <code>po_pack</code>, unpack a <code><a class="el" href="structpo__map.xhtml" title="A mapping from paths to pre-opened directories. ">po_map</a></code> and make it available for normal usage.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">fd</td><td>a file containing a packed <code><a class="el" href="structpo__map.xhtml" title="A mapping from paths to pre-opened directories. ">po_map</a></code> representation </td></tr>
  </table>
  </dd>
</dl>

<p class="definition">Definition at line <a class="el" href="po__pack_8c_source.xhtml#l00148">148</a> of file <a class="el" href="po__pack_8c_source.xhtml">po_pack.c</a>.</p>

<p class="reference">References <a class="el" href="structpo__packed__map.xhtml#a23afb59f3880ee100480505a953f91b1">po_packed_map::count</a>, <a class="el" href="structpo__packed__map.xhtml#acf9768c2ee0fa19cea48b9ec1cd5a61f">po_packed_map::entries</a>, <a class="el" href="po__err_8c.xhtml#a2579611c2cf8960421fbef392fd159bf">po_errormessage()</a>, <a class="el" href="po__err_8c.xhtml#a67a367198c38d11149314c86191cdcb8">po_map_assertvalid()</a>, and <a class="el" href="po__libc__wrappers_8c.xhtml#a8c608fe4dce7b9f98d38263bd30bef56">stat()</a>.</p>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="libpreopen_8h_af11d69efff09c02fc3f3b7bfdeccaa1b_cgraph.svg" width="284" height="139"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<h2 class="groupheader">Variable Documentation</h2>
<a id="a530ee710dd6c7d6d98bb57204e2fdc33"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a530ee710dd6c7d6d98bb57204e2fdc33">&#9670;&nbsp;</a></span>po_print_entry</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="libpreopen_8h.xhtml#ae275abcb02b858e80d18bdbd402d0561">po_map_iter_cb</a> po_print_entry</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>A simple <a class="el" href="libpreopen_8h.xhtml#ae275abcb02b858e80d18bdbd402d0561">po_map_iter_cb</a> that will print a <a class="el" href="structpo__map.xhtml">po_map</a>'s entries, one per line. </p>

<p class="definition">Definition at line <a class="el" href="libpreopen_8h_source.xhtml#l00069">69</a> of file <a class="el" href="libpreopen_8h_source.xhtml">libpreopen.h</a>.</p>

</div>
</div>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_d44c64559bbebec7f509842c48db8b23.xhtml">include</a></li><li class="navelem"><a class="el" href="libpreopen_8h.xhtml">libpreopen.h</a></li>
    <li class="footer">Generated by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.14 </li>
  </ul>
</div>
</body>
</html>
